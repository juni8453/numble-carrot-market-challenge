plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.market'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '2.7.6'
	implementation 'org.projectlombok:lombok:1.18.20'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

bootJar {
	archivesBaseName = 'app'
	archiveFileName = 'app.jar'
	archiveVersion = "0.0.0"

	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

// 생성된 snippet 의 저장 위치 명시
ext {
	snippetsDir = file('build/generated-snippets')
}

// 테스트 Task 의 아웃풋 디렉토리를 스니펫 저장 위치로 설정
test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

// 스니펫 저장 위치를 인풋으로 지정.
// asciidoctor Task 는 테스트 Task 수행 이후에 수행 (테스트 이후 문서가 생성되도록)
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}